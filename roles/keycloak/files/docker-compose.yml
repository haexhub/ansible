version: "3"

services:
  keycloak-db:
    image: docker.io/bitnami/postgresql:latest
    hostname: keycloak-db
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      POSTGRESQL_USERNAME: ${KEYCLOAK_DATABASE_USER:-keycloak}
      POSTGRESQL_DATABASE: ${KEYCLOAK_DATABASE_NAME:-keycloak}
      POSTGRESQL_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD:-keycloak}
      POSTGRES_ROOT_PASSWORD: ${KEYCLOAK_DATABASE_ROOT_PASSWORD:-keycloak}
    volumes:
      - keycloak_postgresql_data:/bitnami/postgresql
    networks:
      - keycloak

  keycloak:
    #image: quay.io/keycloak/keycloak:latest
    ##depends_on:
    ##  postgresql:
    ##    condition: service_started
    #hostname: keycloak.${HOSTNAME}
    #restart: unless-stopped
    #ports:
    #  - 7080:8080
    #networks:
    #  - web
    #  - keycloak
    #environment:
    #  KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER:-admin}
    #  KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-keycloak}

    #  #KEYCLOAK_USER: ${KEYCLOAK_ADMIN_USER:-admin}
    #  #KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-keycloak}

    #  KEYCLOAK_MANAGEMENT_USER: ${KEYCLOAK_MANAGEMENT_USER:-manager}
    #  KEYCLOAK_MANAGEMENT_PASSWORD: ${KEYCLOAK_MANAGEMENT_PASSWORD:-keycloak}

    #  KC_HTTP_ENABLED: "true"

    #  PROXY_ADDRESS_FORWARDING: "true"

    #  KC_HOSTNAME: keycloak.${HOSTNAME}
    #  
    #  #KEYCLOAK_DATABASE_HOST: postgresql
    #  #KEYCLOAK_DATABASE_SCHEMA: ${KEYCLOAK_DATABASE_SCHEMA:-public}
    #  #KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DATABASE_NAME:-keycloak}
    #  #KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DATABASE_USER:-keycloak}
    #  #KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD:-keycloak}
    #  LANG: de_DE.UTF-8
    #command: 
    #  start 
    #  --proxy=edge 
    #  --features=token-exchange
    #labels: 
    #  traefik.enable: "true"
    #  traefik.docker.network: web
    #  #traefik.http.routers.keycloak.entrypoints: ${TRAEFIK_HTTPS_ENDPOINT}
    #  #traefik.http.routers.keycloak.rule: Host(`keycloak.${HOSTNAME}`)
    #  traefik.http.routers.keycloak_secure.rule: Host(`keycloak.${HOSTNAME}`)
    #  traefik.http.routers.keycloak_secure.entrypoints: ${TRAEFIK_HTTPS_ENDPOINT}
    #  traefik.http.routers.keycloak_secure.tls.certresolver: le_staging
    #  traefik.http.services.keycloak.loadbalancer.server.port: 8080

    image: quay.io/keycloak/keycloak:19.0.1
    hostname: keycloak.${DOMAIN_NAME} 
    container_name: keycloak
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 7080:8080
    networks:
      - ${TRAEFIK_NETWORK_NAME}
      - ${KEYCLOAK_NETWORK_NAME}
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin 
      - KEYCLOAK_HOSTNAME_STRICT_HTTPS=false
      - PROXY_ADDRESS_FORWARDING=true
    command:
      - start-dev
        --hostname=${DOMAIN_NAME} 
        --hostname-port=7080
        --proxy=edge  
        #--hostname-strict-backchannel=true
    labels: 
      - traefik.enable=true
      - traefik.docker.network=${TRAEFIK_NETWORK_NAME}
      - traefik.http.routers.keycloak.entrypoints=${TRAEFIK_HTTP_ENDPOINT}
      - traefik.http.routers.keycloak.rule=Host(`keycloak.${DOMAIN_NAME}`)
      - traefik.http.routers.keycloak_secure.rule=Host(`keycloak.${DOMAIN_NAME}`)
      - traefik.http.routers.keycloak_secure.entrypoints=${TRAEFIK_HTTPS_ENDPOINT}
      - traefik.http.routers.keycloak_secure.tls.certresolver=le_staging
      - traefik.http.services.keycloak.loadbalancer.server.port=8080


networks:
  traefik:
    name: ${TRAEFIK_NETWORK_NAME}
    external: true

  keycloak:
    name:  ${KEYCLOAK_NETWORK_NAME}
    external: true

volumes:
  keycloak_postgresql_data: