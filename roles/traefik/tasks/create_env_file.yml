---
- name: Check if .env file exists
  ansible.builtin.stat:
    path: '{{ traefik.app_directory }}/.env'
  register: env_file

- name: create traefik env file
  ansible.builtin.blockinfile:
    path: '{{ traefik.app_directory }}/.env'
    create: yes
    marker: '# {mark} Ansible set environment'
    block: |
      DOMAIN_NAME={{ domain_name }}
      TRAEFIK_ENDPOINT_HTTP_NAME={{ traefik.endpoint.http.name }}
      TRAEFIK_ENDPOINT_HTTP_PORT={{ traefik.endpoint.http.port }}
      TRAEFIK_ENDPOINT_HTTPS_NAME={{ traefik.endpoint.https.name }}
      TRAEFIK_ENDPOINT_HTTPS_PORT={{ traefik.endpoint.https.port }}
      TRAEFIK_ENDPOINT_PING_PORT={{ traefik.endpoint.ping.port }}
      TRAEFIK_NETWORK_NAME={{ traefik.network_name }}
      TRAEFIK_SUB_DOMAIN_NAME={{ traefik.sub_domain_name }}


      # Lets Encrypt
      TRAEFIK_LETS_ENCRYPT_EMAIL={{ secrets.traefik.lets_encrypt.email }}
      TRAEFIK_LETS_ENCRYPT_RESOLVER={{ (mode == "production") | ternary("http_resolver", "http_resolver_staging") }}
      TRAEFIK_LETS_ENCRYPT_STORAGE_HTTP_RESOLVER={{ traefik.lets_encrypt.storage.http_resolver }}
      TRAEFIK_LETS_ENCRYPT_STORAGE_TLS_RESOLVER={{ traefik.lets_encrypt.storage.tls_resolver }}

      # Service Traefik
      TRAEFIK_CONTAINER_NAME={{ traefik.container_name | default(traefik) }}
      TRAEFIK_HOSTNAME={{ traefik.hostname | default(traefik) }}
      TRAEFIK_IMAGE={{ traefik.image | default(traefik) }}
      TRAEFIK_IMAGE_VERSION={{ traefik.image_version | default(latest) }}
  when: not env_file.stat.exists
