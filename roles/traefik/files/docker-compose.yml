version: "3.9"

services:
  traefik:
    image: ${TRAEFIK_IMAGE:-traefik}:${TRAEFIK_IMAGE_VERSION:-latest}
    container_name: traefik
    hostname: ${TRAEFIK_HOSTNAME:-traefik}
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - KILL
      - NET_BIND_SERVICE
      - DAC_READ_SEARCH
    ports:
      - 80:80
      - 443:443
      #- ${TRAEFIK_PING_PORT:-8080}:8080
    networks:
      - traefik
    volumes:
      - ./acme_letsencrypt.json:${TRAEFIK_LETS_ENCRYPT_STORAGE_HTTP_RESOLVER:-/acme_letsencrypt.json}
      - ./dynamic_config.yml:/dynamic_config.yml:ro
      - ./tls_letsencrypt.json:${TRAEFIK_LETS_ENCRYPT_STORAGE_TLS_RESOLVER:-/tls_letsencrypt.json}
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_log:/var/log/traefik
    labels:
      traefik.enable: true

      traefik.http.routers.traefik.entryPoints: ${TRAEFIK_HTTP_ENDPOINT:-web}
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.service: api@internal

      traefik.http.routers.traefik_secure.entryPoints: ${TRAEFIK_HTTPS_ENDPOINT:-web_secure}
      traefik.http.routers.traefik_secure.rule: Host(`traefik.${DOMAIN_NAME}`)
      traefik.http.routers.traefik_secure.service: api@internal
      traefik.http.routers.traefik_secure.tls: true
      traefik.http.routers.traefik_secure.tls.certresolver: ${TRAEFIK_LETS_ENCRYPT_RESOLVER:-http_resolver_staging}

      #traefik.http.routers.traefik_secure.middlewares: authelia@file
      traefik.http.routers.pingweb.rule: PathPrefix(`/ping`)
      traefik.http.routers.pingweb.service: ping@internal
      traefik.http.routers.pingweb.entryPoints: ${TRAEFIK_HTTPS_ENDPOINT:-web_secure}

      # traefik.http.middlewares.authelia.forwardAuth.address: http://authelia:9091/api/verify?rd=https://${AUTHELIA_SUB_DOMAIN}.${DOMAIN_NAME}
      # traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders: "Remote-User,Remote-Groups,Remote-Email,Remote-Name"
      # traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader: true
      #traefik.docker.network: ${TRAEFIK_NETWORK_NAME:-proxy}
      ###traefik.enable: true
      ###traefik.http.services.traefik.loadbalancer.server.port: 8080
      ###traefik.http.routers.traefik.service: api@internal
      ###traefik.http.routers.traefik.entryPoints: ${TRAEFIK_HTTP_ENDPOINT:-web}
      ###traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN_NAME}`)

      #traefik.http.routers.traefik_secure.tls: true
      #traefik.http.routers.traefik_secure.service: api@internal
      #traefik.http.routers.traefik_secure.rule: Host(`traefik.${DOMAIN_NAME}`)
      #traefik.http.routers.traefik_secure.entryPoints: ${TRAEFIK_HTTPS_ENDPOINT:-web_secure}
      #traefik.http.routers.traefik_secure.tls.certresolver: http_resolver_staging

networks:
  traefik:
    external: true
    name: ${TRAEFIK_NETWORK_NAME:-proxy}

volumes:
  traefik_log:
