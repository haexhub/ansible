services:
  traefik:
    image: ${TRAEFIK_IMAGE:-traefik}:${TRAEFIK_IMAGE_VERSION:-latest}
    container_name: traefik
    hostname: ${TRAEFIK_HOSTNAME:-traefik}
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - KILL
      - NET_BIND_SERVICE
      - DAC_READ_SEARCH
    ports:
      - 80:${TRAEFIK_ENDPOINT_HTTP_PORT:-80}
      - 443:${TRAEFIK_ENDPOINT_HTTPS_PORT:-443}
    #   - 8080:8080
    networks:
      - traefik
      - zitadel
    volumes:
      - ./acme_letsencrypt.json:${TRAEFIK_LETS_ENCRYPT_STORAGE_HTTP_RESOLVER:-/acme_letsencrypt.json}
      - ./dynamic_config.yml:/dynamic_config.yml:ro
      - ./tls_letsencrypt.json:${TRAEFIK_LETS_ENCRYPT_STORAGE_TLS_RESOLVER:-/tls_letsencrypt.json}
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_log:/var/log/traefik
    labels:
      traefik.enable: true

      traefik.http.routers.traefik.entryPoints: ${TRAEFIK_ENDPOINT_HTTP_NAME:-web}
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_SUB_DOMAIN_NAME:-traefik}.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.service: api@internal

      traefik.http.routers.traefik_secure.entryPoints: ${TRAEFIK_ENDPOINT_HTTPS_NAME:-web_secure}
      traefik.http.routers.traefik_secure.rule: Host(`${TRAEFIK_SUB_DOMAIN_NAME:-traefik}.${DOMAIN_NAME}`)
      traefik.http.routers.traefik_secure.service: api@internal
      traefik.http.routers.traefik_secure.tls: true
      traefik.http.routers.traefik_secure.tls.certresolver: ${TRAEFIK_LETS_ENCRYPT_RESOLVER:-http_resolver_staging}

      # oathkeeper config
      #traefik.http.middlewares.oathkeeper.forwardauth.address: http://haex.space:4456/decisions
      #traefik.http.middlewares.oathkeeper.forwardauth.authResponseHeaders: X-Id-Token,Authorization,X-Forwarded-User
      #traefik.http.middlewares.oathkeeper.forwardauth.trustForwardHeader: true
networks:
  traefik:
    external: true
    name: ${TRAEFIK_NETWORK_NAME:-proxy}
  zitadel:
    external: true

volumes:
  traefik_log:
