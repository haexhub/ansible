version: "3.8"

services:
  proxy-disabled-tls:
    image: "traefik:latest"
    #volumes:
    #  - "./traefik-disabled-tls.yaml:/etc/traefik/traefik.yaml:ro"
    ports:
      - "80:80"
      - "443:443"
      - 8081:8080
    networks:
      - "zitadel"
    labels:
      traefik.enable: true

      traefik.http.routers.traefik.entryPoints: ${TRAEFIK_ENDPOINT_HTTP_NAME:-web}
      traefik.http.routers.traefik.rule: Host(`${DOMAIN_NAME}`)
      traefik.http.routers.traefik.middleware: zitadel
      traefik.http.routers.traefik.service: zitadel

      traefik.http.routers.traefik-api.entryPoints: ${TRAEFIK_ENDPOINT_HTTP_NAME:-web}
      traefik.http.routers.traefik-api.rule: Host(`api.${DOMAIN_NAME}`)
      traefik.http.routers.traefik-api.service: api@internal
      traefik.http.routers.traefik-api.middleware: zitadel
    volumes:
      - ./acme_letsencrypt.json:${TRAEFIK_LETS_ENCRYPT_STORAGE_HTTP_RESOLVER:-/acme_letsencrypt.json}
      - ./dynamic_config.yml:/dynamic_config.yml:ro
      - ./tls_letsencrypt.json:${TRAEFIK_LETS_ENCRYPT_STORAGE_TLS_RESOLVER:-/tls_letsencrypt.json}
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #- traefik_log:/var/log/traefik
    #depends_on:
    #  zitadel-disabled-tls:
    #    condition: "service_healthy"

  #proxy-external-tls:
  #  image: "traefik:latest"
  #  volumes:
  #    - "./traefik-external-tls.yaml:/etc/traefik/traefik.yaml:ro"
  #    - "./selfsigned.crt:/etc/certs/selfsigned.crt:ro"
  #    - "./selfsigned.key:/etc/certs/selfsigned.key:ro"
  #  ports:
  #    - "443:443"
  #  networks:
  #    - "zitadel"
  #  depends_on:
  #    zitadel-external-tls:
  #      condition: "service_healthy"
#
#proxy-enabled-tls:
#  image: "traefik:latest"
#  volumes:
#    - "./traefik-disabled-tls.yaml:/etc/traefik/traefik.yaml:ro"
#    #- "./selfsigned.crt:/etc/certs/selfsigned.crt:ro"
#    #- "./selfsigned.key:/etc/certs/selfsigned.key:ro"
#  ports:
#    - "443:443"
#  networks:
#    - "zitadel"
#  depends_on:
#    zitadel-enabled-tls:
#      condition: "service_healthy"

networks:
  zitadel:
    external: true
