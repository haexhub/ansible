services:
  portainer:
    restart: unless-stopped
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - portainer_data:/data
    networks:
      - traefik
      - zitadel
    ports:
      - 19443:9443
      - 19000:9000
      - 18000:8000
    labels:
      traefik.enable: true
      traefik.docker.network: ${TRAEFIK_NETWORK_NAME:-proxy}
      traefik.http.routers.portainer.entrypoints: ${TRAEFIK_ENDPOINT_HTTP_NAME:-web}
      traefik.http.routers.portainer.rule: Host(`${SUB_DOMAIN_NAME}.${DOMAIN_NAME}`)
      traefik.http.routers.portainer_secure.rule: Host(`${SUB_DOMAIN_NAME}.${DOMAIN_NAME}`)
      traefik.http.routers.portainer_secure.entrypoints: ${TRAEFIK_ENDPOINT_HTTPS_NAME:-web_secure}
      traefik.http.routers.portainer_secure.tls.certresolver: ${TRAEFIK_LETS_ENCRYPT_RESOLVER:-http_resolver_staging}
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      #traefik.http.routers.portainer_secure.middlewares: oauth-auth
      #traefik.http.services.portainer.loadbalancer.server.url: "h2c://zitadel:8080"

      #traefik.http.routers.portainer.middlewares: zitadel@file

    command: --admin-password ${ADMIN_PASSWORD} --log-level DEBUG

volumes:
  portainer_data:
    name: portainer_data

networks:
  traefik:
    name: ${TRAEFIK_NETWORK_NAME:-proxy}
    external: true
  zitadel:
    external: true
