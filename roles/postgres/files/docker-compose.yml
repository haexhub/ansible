services:
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_ADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_ADMIN_PASSWORD:-password}
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
      #PGADMIN_CONFIG_CONFIG_DATABASE_URI: "'postgresql://postgres:password@bundes_postgres:5432'"
      PGADMIN_SERVER_JSON_FILE: /servers.json
    #ports:
    #  - 8021:80
    networks:
      - postgres
    depends_on:
      - postgres
    #volumes:
    #  - ./servers.json:/servers.json
    labels:
      traefik.enable: true
      traefik.docker.network: ${TRAEFIK_NETWORK_NAME:-proxy}
      traefik.http.routers.pgadmin.entrypoints: ${TRAEFIK_ENDPOINT_HTTP_NAME}
      traefik.http.routers.pgadmin.rule: Host(`pgadmin.${DOMAIN_NAME}`)
      traefik.http.routers.pgadmin_secure.rule: Host(`pgadmin.${DOMAIN_NAME}`)
      traefik.http.routers.pgadmin_secure.entrypoints: ${TRAEFIK_ENDPOINT_HTTPS_NAME}
      traefik.http.routers.pgadmin_secure.tls.certresolver: ${TRAEFIK_LETS_ENCRYPT_RESOLVER:-http_resolver_staging}
      traefik.http.services.pgadmin.loadbalancer.server.port: 80

  postgres:
    container_name: postgres
    image: ${POSTGRES_IMAGE:-postgres}:${POSTGRES_IMAGE_TAG:-latest}
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
    ports:
      - 127.0.0.1:5555:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - postgres

networks:
  postgres:
    name: postgres
    external: true
